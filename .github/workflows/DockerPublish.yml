name: Docker

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  release:
    types: [created]
env:
  IMAGE_NAME: releasebot

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Build docker image x86
        run: docker build . -t $IMAGE_NAME
      - name: Buil docker image arm
        run:  docker build . -t $IMAGE_NAME-arm -f Dockerfile-arm
      - name: Log into GitHub Container Registry
        run: echo ${{ secrets.PAT }} | docker login -u kotovaleksandr --password-stdin ghcr.io
      - name: Push image to GitHub Container Registry
        run: |
            IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
            # Change all uppercase to lowercase
            IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
            
            # Strip git ref prefix from version
            VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
            # Strip "v" prefix from tag name
            [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
            # Use Docker `latest` tag convention
            [ "$VERSION" == "$default-branch" ] && VERSION=latest
                       
            echo IMAGE_ID=$IMAGE_ID
            echo VERSION=$VERSION
            docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
            docker push $IMAGE_ID:$VERSION
            docker tag $IMAGE_NAME-arm $IMAGE_ID-arm:$VERSION
            docker push $IMAGE_ID-arm:$VERSION
